services:
  web:
    build: 
      context: .
      target: builder
    ports:
      - "3000:3000"
    environment:
      # Database
      - PSQL_HOST=db
      - PSQL_PORT=5432
      - PSQL_USER=postgres
      - PSQL_PASSWORD=postgres
      - PSQL_DATABASE=lenslocked
      - PSQL_SSLMODE=disable
      # Security
      - CSRF_KEY=${CSRF_KEY}
      - CSRF_SECURE=${CSRF_SECURE}
      # FiveManage
      - FIVEMANAGE_API_KEY=${FIVEMANAGE_API_KEY}
      - FIVEMANAGE_DEBUG=${FIVEMANAGE_DEBUG}
      # Session
      - SESSION_KEY=${SESSION_KEY}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    working_dir: /app
    command: sh -c "/init-db.sh && go run main.go"

  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=lenslocked
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
